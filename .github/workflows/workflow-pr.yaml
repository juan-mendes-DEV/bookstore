name: Python Pull Workflow

on: [pull_request]

jobs:
  qa:
    name: Quality check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2  # Usando a versão mais recente do checkout
     
      - name: Set up Python
        uses: actions/setup-python@v2  # Usando a versão mais estável
        with:
          python-version: 3.12

      - name: Cache poetry dependencies
        uses: actions/cache@v2  # Cache para otimizar dependências
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install poetry
        run: |
          pip install -U pip
          pip install poetry
          poetry install  # Instalação sem as dependências de desenvolvimento, caso não precise delas no QA

      - name: Set environment variables
        run: |
          echo "SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
          echo "RAILWAY_TOKEN=${{ secrets.RAILWAY_TOKEN }}" >> $GITHUB_ENV
          echo "RAILWAY_PROJECT_ID=${{ secrets.RAILWAY_PROJECT_ID }}" >> $GITHUB_ENV

      - name: View poetry --help
        run: poetry --help

      # - name: Delete existing test database
        # run: |
        #   PGPASSWORD=${{ secrets.DATABASE_PASSWORD }} psql -h ${{ secrets.DATABASE_HOST }} -U ${{ secrets.DATABASE_USER }} -c "DROP DATABASE IF EXISTS test_railway;"

      - name: Test
        run: |
          poetry run python manage.py test --keepdb --no-input  # Adicionando --no-input para evitar a solicitação de confirmação

      - name: Wemake Python Stylguide
        uses: wemake-services/wemake-python-styleguide@0.16.0
        continue-on-error: true
        with:
          reporter: 'github-pr-review'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # TEST